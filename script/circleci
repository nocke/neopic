#!/usr/bin/env node
// REF usage to skip clean:  npm run circleci -- nocheck
// REF usage to skip clean:  npm run release -- nocheck

import { ensure, errLog, exec, log, warn } from './script-helpers.js'
import packageJson from '../package.json' assert { type: 'json' }

try {
  const args = process.argv.slice(2)

  if (args.includes('nocheck')) {
    warn('skipping clean state check (`nocheck`)')
  } else {
    try {
      exec('git diff-index --quiet HEAD --')
      log('No uncommitted changes detected.')
    } catch (error) {
      errLog('Uncommitted changes! Please commit or stash them.')
      process.exit(1)
    }
  }

  const version = packageJson.version
  const branch = 'master'
  const remoteRepo = exec(`git config branch.${branch}.remote`).trim()
  let tag

  if (args.includes('release')) {
    ensure(/^\d+\.\d+\.\d+$/.test(version), 'version sanity check');
    tag = 'release-' + version
    log(`▶▶▶ building RELEASE ${tag}`)
  } else {
    tag = 'circleci-' + exec('git rev-parse --short=7 HEAD').toString().trim()
  }

  exec(`git tag -f ${tag}`)
  exec(`git push --force ${remoteRepo} ${tag}`)

} catch (error) {
  console.error('failed to push changes:', error);
  process.exit(1);
}
